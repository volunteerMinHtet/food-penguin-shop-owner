[{"/home/volunteer/code/react/react-redux-toolkit/src/index.js":"1","/home/volunteer/code/react/react-redux-toolkit/src/App.js":"2","/home/volunteer/code/react/react-redux-toolkit/src/serviceWorker.js":"3","/home/volunteer/code/react/react-redux-toolkit/src/app/store.js":"4","/home/volunteer/code/react/react-redux-toolkit/src/features/counter/counterSlice.js":"5","/home/volunteer/code/react/react-redux-toolkit/src/features/counter/Counter.js":"6","/home/volunteer/code/react/react-redux-toolkit/src/features/foods/FoodsList.js":"7","/home/volunteer/code/react/react-redux-toolkit/src/features/foods/foodSlice.js":"8","/home/volunteer/code/react/react-redux-toolkit/src/features/foods/AddFoodForm.js":"9","/home/volunteer/code/react/react-redux-toolkit/src/features/title/Title.js":"10","/home/volunteer/code/react/react-redux-toolkit/src/api/foodApi.js":"11","/home/volunteer/code/react/react-redux-toolkit/src/api/constant.js":"12","/home/volunteer/code/react/react-redux-toolkit/src/features/categories/categoriesSlice.js":"13"},{"size":614,"mtime":1610345032386,"results":"14","hashOfConfig":"15"},{"size":5852,"mtime":1610301603778,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":1610261146003,"results":"17","hashOfConfig":"15"},{"size":300,"mtime":1610451380893,"results":"18","hashOfConfig":"15"},{"size":1551,"mtime":1610261146003,"results":"19","hashOfConfig":"15"},{"size":1626,"mtime":1610261146003,"results":"20","hashOfConfig":"15"},{"size":2988,"mtime":1610450912875,"results":"21","hashOfConfig":"15"},{"size":1230,"mtime":1610451067193,"results":"22","hashOfConfig":"15"},{"size":3859,"mtime":1610377907026,"results":"23","hashOfConfig":"15"},{"size":338,"mtime":1610375677029,"results":"24","hashOfConfig":"15"},{"size":249,"mtime":1610449107183,"results":"25","hashOfConfig":"15"},{"size":53,"mtime":1610443863028,"results":"26","hashOfConfig":"15"},{"size":0,"mtime":1610453201481,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1is4hum",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/volunteer/code/react/react-redux-toolkit/src/index.js",[],["57","58"],"/home/volunteer/code/react/react-redux-toolkit/src/App.js",["59"],"import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport { FoodsList } from './features/foods/FoodsList'\r\nimport { AddFoodForm } from './features/foods/AddFoodForm'\r\n\r\nimport clsx from 'clsx'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport List from '@material-ui/core/List'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport { Add } from '@material-ui/icons'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  contentPaper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport default function App() {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Mini variant drawer\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n\r\n          <Paper className={classes.contentPaper}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={FoodsList} />\r\n              <Route exact path=\"/foods\" component={FoodsList} />\r\n              <Route exact path=\"/foods/add\" component={AddFoodForm} />\r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </Paper>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","/home/volunteer/code/react/react-redux-toolkit/src/serviceWorker.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/app/store.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/features/counter/counterSlice.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/features/counter/Counter.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/features/foods/FoodsList.js",["60"],"/home/volunteer/code/react/react-redux-toolkit/src/features/foods/foodSlice.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/features/foods/AddFoodForm.js",["61","62"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { nanoid } from '@reduxjs/toolkit'\n\nimport { useDispatch } from 'react-redux'\n\nimport { addNewFood } from './foodSlice'\n\nimport {\n  makeStyles,\n  Button,\n  FormControl,\n  TextField,\n  Typography,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Box,\n  Tooltip,\n} from '@material-ui/core'\n\nimport Title from '../title/Title'\n\nconst useStyles = makeStyles((theme) => ({\n  root: { minWidth: 250 },\n  contentBody: {\n    marginTop: theme.spacing(2),\n  },\n  inputFormControl: {\n    // margin: theme.spacing(1),\n    width: 250,\n  },\n  btnFormControl: {\n    margin: theme.spacing(2, 0),\n    width: 150,\n  },\n  selectOption: {\n    maxWidth: 250,\n  },\n}))\n\nexport const AddFoodForm = () => {\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n\n  const [name, setName] = useState('')\n  const [category, setCategory] = useState('')\n  const [price, setPrice] = useState('')\n\n  const canSave = [name, category, price].every(Boolean)\n\n  const onNameChanged = (e) => setName(e.target.value)\n  const onCategoryChanged = (e) => setCategory(e.target.value)\n  const onPriceChanged = (e) => setPrice(e.target.value)\n\n  const onAddBtnClicked = async () => {\n    await dispatch(addNewFood({ id: nanoid(), name, category, price }))\n    console.log(`${name}, ${category}, ${price}`)\n  }\n\n  return (\n    <Box className={classes.root}>\n      <Title>Food Form</Title>\n\n      <Box className={classes.contentBody}>\n        <form noValidate autoComplete=\"off\">\n          <Box>\n            <Grid container spacing={1}>\n              <Grid item xs=\"auto\">\n                <FormControl variant=\"outlined\" className={classes.inputFormControl}>\n                  <TextField\n                    id=\"name\"\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    onChange={onNameChanged}\n                    value={name}\n                  />\n                </FormControl>\n              </Grid>\n\n              <Grid item xs=\"auto\">\n                {/* <Tooltip arrow title={category}> */}\n                <FormControl variant=\"outlined\" className={classes.inputFormControl}>\n                  <InputLabel id=\"categoryLabel\">Category</InputLabel>\n                  <Select\n                    labelId=\"categoryLabel\"\n                    id=\"category\"\n                    label=\"Category\"\n                    onChange={onCategoryChanged}\n                    value={category}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1} className={classes.selectOption}>\n                      {/* <Typography noWrap>Sea Foods</Typography> */}\n                      Sea Food\n                    </MenuItem>\n                    <MenuItem value={2}>Chinese Food</MenuItem>\n                  </Select>\n                </FormControl>\n                {/* </Tooltip> */}\n              </Grid>\n\n              <Grid item xs=\"auto\">\n                <FormControl variant=\"outlined\" className={classes.inputFormControl}>\n                  <TextField\n                    id=\"price\"\n                    label=\"Price\"\n                    variant=\"outlined\"\n                    onChange={onPriceChanged}\n                    value={price}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <FormControl variant=\"outlined\" className={classes.btnFormControl}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"button\"\n              disabled={!canSave}\n              onClick={onAddBtnClicked}\n            >\n              Add\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n\n      <Link to=\"/foods\">Back</Link>\n    </Box>\n  )\n}\n","/home/volunteer/code/react/react-redux-toolkit/src/features/title/Title.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/api/foodApi.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/api/constant.js",[],"/home/volunteer/code/react/react-redux-toolkit/src/features/categories/categoriesSlice.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":25,"column":10,"nodeType":"69","messageId":"70","endLine":25,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":2,"column":36,"nodeType":"69","messageId":"70","endLine":2,"endColumn":43},{"ruleId":"67","severity":1,"message":"72","line":15,"column":3,"nodeType":"69","messageId":"70","endLine":15,"endColumn":13},{"ruleId":"67","severity":1,"message":"73","line":21,"column":3,"nodeType":"69","messageId":"70","endLine":21,"endColumn":10},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Add' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'Typography' is defined but never used.","'Tooltip' is defined but never used.","no-global-assign","no-unsafe-negation"]